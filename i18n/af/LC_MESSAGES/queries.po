# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012, Linfiniti Consulting CC
# This file is distributed under the same license as the The Free Quantum GIS Training Manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Free Quantum GIS Training Manual 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2012-07-18 19:25\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

# 34e377ee14174728b75c489e01b31848
#: ..\..\postgres\queries.rst:2
msgid "|LS| Queries"
msgstr ""

# 392a4b8846354fe5841f563ad80fee66
#: ..\..\postgres\queries.rst:4
msgid ""
"When you write a :kbd:`SELECT ...` command it is commonly known as a query - "
"you are interrogating the database for information."
msgstr ""

# 2be39dbce54a449890a5e5ccb2d1bde8
#: ..\..\postgres\queries.rst:7
msgid ""
"**The goal of this lesson:** To learn how to create queries that will return "
"useful information."
msgstr ""

# 7e5bee807e90487dab96bf68a5210b6c
#: ..\..\postgres\queries.rst:11
msgid "Follow-up from previous lesson"
msgstr ""

# 74d41c54c27f4b9e8a3fd78a712f9a12
#: ..\..\postgres\queries.rst:13
msgid "Let's check that you added a few people to the database successfully:"
msgstr ""

# bf016fc0380148fabb674b420201d37f
#: ..\..\postgres\queries.rst:27
msgid "Ordering results"
msgstr ""

# 0bbf7dfd977e4d68812c226a7d098016
#: ..\..\postgres\queries.rst:29
msgid "Let's get a list of people ordered by their house numbers:"
msgstr ""

# a722d58921fc4cc28dfec1463a291a85
# 316b79b1f0f04e689ad46891f3061b4f
# 443dc977b39844a799df3519abe32d2f
# 0c48f817f25d4aafadb366ea7414306b
# 110384495f9c4cdcb0981c5a81affb43
# 0e3ded7312de46429978fc0dbdec9a00
# d8f78b64c19f49b28a72276c67228100
#: ..\..\postgres\queries.rst:35 ..\..\postgres\queries.rst:53
#: ..\..\postgres\queries.rst:187 ..\..\postgres\queries.rst:212
#: ..\..\postgres\queries.rst:237 ..\..\postgres\queries.rst:254
#: ..\..\postgres\queries.rst:298
msgid "Result:"
msgstr ""

# 5127d6956c514e7797215992e85ec69e
#: ..\..\postgres\queries.rst:47
msgid "You can sort by more than one column:"
msgstr ""

# bf31b11c33924992a4040fc093a4e08c
#: ..\..\postgres\queries.rst:66
msgid "Filtering"
msgstr ""

# ca35827ba63c419da09bbc42db011f32
#: ..\..\postgres\queries.rst:68
msgid ""
"Often you won't want to see every single record in the database - especially "
"if there are thousands of records and you are only interested in seeing one "
"or two. Never fear, you can filter the results!"
msgstr ""

# d2bf258a839c47e1b5b5d1d14c12cfac
#: ..\..\postgres\queries.rst:72
msgid "Here is an example of a numerical filter:"
msgstr ""

# a5257752a1814895b95b8b5565cc596e
#: ..\..\postgres\queries.rst:83
msgid ""
"You can combine filters (defined using the :kbd:`WHERE` clause) with sorting "
"(defined using the :kbd:`ORDER BY`)"
msgstr ""

# 0299f74d340b467c8752d4f081e8f7d9
#: ..\..\postgres\queries.rst:96
msgid "You can also filter based on text data:"
msgstr ""

# 94efce786b6244cb9f8e0ad223543f0c
#: ..\..\postgres\queries.rst:107
msgid ""
"Here we used the :kbd:`LIKE` clause to find all names with an :kbd:`i` in "
"them. If you want to search for a string of letters regardless of case, you "
"can do a case insensitive search using the :kbd:`ILIKE` clause:"
msgstr ""

# a9d55c52d97b404ba4f2200a2943271b
#: ..\..\postgres\queries.rst:120
msgid ""
"That found everyone with a :kbd:`k` or :kbd:`K` in their name. Using the "
"normal :kbd:`ILIKE` clause, you'd get:"
msgstr ""

# 8ca3c15b2a114f0bade3b6b9d42e6877
#: ..\..\postgres\queries.rst:132
msgid "Joins"
msgstr ""

# d7ac57330eb24b99a3b3be1348f41d6a
#: ..\..\postgres\queries.rst:134
msgid ""
"What if you want to see the person's details and their street name (not its "
"id)? In order to do that, you need to join the two tables together in a "
"single query. Lets look at an example:"
msgstr ""

# 5e6a9fde440b4b59a7b7f98300b0c09f
#: ..\..\postgres\queries.rst:144
msgid ""
"With joins, you will always state the two tables the information is coming "
"from, in this case people and streets.  You also need to specify which two "
"keys must match (foreign key & primary key). If you don't specify that, you "
"will get a list of all possible combinations of people and streets, but no "
"way to know who actually lives on which street!"
msgstr ""

# d4f10676d7c94d66bbca958e3127e676
#: ..\..\postgres\queries.rst:150
msgid "Here is what the correct output will look like:"
msgstr ""

# f84d30e0935e42fb9a35ee966df9d258
#: ..\..\postgres\queries.rst:162
msgid ""
"We will revisit joins as we create more complex queries later. Just remember "
"they provide a simple way to combine the information from two or more tables."
msgstr ""

# 0b12b5adee1440dc9199c91d02f2307b
#: ..\..\postgres\queries.rst:166
msgid "Subselect"
msgstr ""

# 69445dd341a748d9ba733c2c31d9dc2b
#: ..\..\postgres\queries.rst:168
msgid "First, let's do a little tweaking to our data:"
msgstr ""

# 7ca7663a3cde4194874bd8fd1a851d6e
#: ..\..\postgres\queries.rst:178
msgid ""
"Let's take a quick look at our data after those changes - we reuse our query "
"from the previous section:"
msgstr ""

# d7a249bd0b8a4298a45d20a0b36d27dc
#: ..\..\postgres\queries.rst:199
msgid ""
"Now let's show you a subselection on this data. We want to show only people "
"who live in :kbd:`street_id` number :kbd:`1`."
msgstr ""

# f1b29b3d44d84159aeac78241ec0587e
#: ..\..\postgres\queries.rst:222
msgid ""
"This is a contrived example and in the above situations it may have been "
"overkill. However when you have to filter based on a selection, subselects "
"are really useful!"
msgstr ""

# a5bfc50028464959860ff25eba956420
#: ..\..\postgres\queries.rst:227
msgid "Aggregate Queries"
msgstr ""

# f6175c2601eb481989c78a878fc8ecfa
#: ..\..\postgres\queries.rst:229
msgid ""
"One of the powerful features of a database is its ability to summarise the "
"data in its tables. These summaries are called aggregate queries. Here is a "
"typical example:"
msgstr ""

# c389a59880804c2bba25e5bd0bdeac7d
#: ..\..\postgres\queries.rst:246
msgid "If we want the counts summarised by street name we can do this:"
msgstr ""

# d0f3a95a20dd4225a1533cd62d2c14c1
#: ..\..\postgres\queries.rst:265
msgid ""
"Because there is no :kbd:`ORDER BY` clause, on your computer these data may "
"not be in the same order as shown here."
msgstr ""

# 33c211f29f1044f2b74005f2d4797000
#: ..\..\postgres\queries.rst:268
msgid "Exercise:"
msgstr ""

# f2becfd7061648f6a572ee053df64089
#: ..\..\postgres\queries.rst:270
msgid ""
"Summarise the people by street name and show the actual street names instead "
"of the street_id's"
msgstr ""

# aa827f693dde40e985842b021ee68172
#: ..\..\postgres\queries.rst:289
msgid "Solution:"
msgstr ""

# 23cf3aebbc2244a6badde5ee18b18092
#: ..\..\postgres\queries.rst:309
msgid ""
"You will notice that we have prefixed field names with table names (e.g. "
"people.name and streets.name). This needs to be done whenever the field name "
"is ambiguous."
msgstr ""

# 0dd97fefb45e4d3390c862517c5e081a
#: ..\..\postgres\queries.rst:314
msgid "|IC|"
msgstr ""

# 507fa25ea3ab4c0da6eaada5432534c6
#: ..\..\postgres\queries.rst:316
msgid ""
"You've seen how to use queries to return the data in your database in a way "
"that allows you to extract useful information from it."
msgstr ""

# 3f77a3b481064406ada940f9307ddcf1
#: ..\..\postgres\queries.rst:320
msgid "|WN|"
msgstr ""

# c6bda890f8ce4300812a12ede50775d8
#: ..\..\postgres\queries.rst:322
msgid ""
"Next you'll see how to create views from the queries that you've written."
msgstr ""
