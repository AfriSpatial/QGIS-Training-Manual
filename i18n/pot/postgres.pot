# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012, Linfiniti Consulting CC
# This file is distributed under the same license as the The Free Quantum GIS Training Manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Free Quantum GIS Training Manual 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2012-09-21 18:50\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ..\..\postgres\adding_data.rst:2
# 07ea5666748d4eebb951e91efe319807
msgid "|LS| Adding Data to the Model"
msgstr ""

#: ..\..\postgres\adding_data.rst:4
# d0fda47123cc43fd8da06c0ec26fcadb
msgid "The models we've created will now need to be populated with the data they're intended to contain."
msgstr ""

#: ..\..\postgres\adding_data.rst:7
# 833cb14e3e064cf49da749b0f95a8c71
msgid "**The goal for this lesson:** To learn how to insert new data into the database models."
msgstr ""

#: ..\..\postgres\adding_data.rst:11
# df24e64dcbe7467ba7988d2a035d1a41
msgid "Insert statement"
msgstr ""

#: ..\..\postgres\adding_data.rst:13
# 20afa1863caa4f21bd7caccc608763d5
msgid "How do you add data to a table? The sql :kbd:`INSERT` statement provides the functionality for this:"
msgstr ""

#: ..\..\postgres\adding_data.rst:20
# ee68983bb00c4c2099ee088ad4a14a94
msgid "A couple of things to note:"
msgstr ""

#: ..\..\postgres\adding_data.rst:22
# 16b12cf326174533b0303d53bacec2ac
msgid "after the table name (:kbd:`streets`), you list the column names that you will be populating (in this case only the :kbd:`name` column)."
msgstr ""

#: ..\..\postgres\adding_data.rst:24
# b85a8165b6a947a9b378e693408cd4d0
msgid "after the :kbd:`values` keyword, place the list of field values."
msgstr ""

#: ..\..\postgres\adding_data.rst:25
# f719cebd05dd438e8809d15c2b5b6484
msgid "strings should be quoted using single quotes."
msgstr ""

#: ..\..\postgres\adding_data.rst:26
# 5687e9cc0a834f0f9139f63b71e6a104
msgid "you will note that I did not insert a value for the :kbd:`id` column - that is because it is a sequence and will be autogenerated."
msgstr ""

#: ..\..\postgres\adding_data.rst:28
# e353b62675f5476199a0027f24273252
msgid "if you do manually set the :kbd:`id`, you may cause serious problems with the integrity of your database."
msgstr ""

#: ..\..\postgres\adding_data.rst:31
# 43622c69b78d4ee88d8f08c7d6ed4150
msgid "You should see :kbd:`INSERT 0 1` if it is successful."
msgstr ""

#: ..\..\postgres\adding_data.rst:33
# c60a31655e514d99933b84aa5b0684e0
msgid "You can see the result of your insert action by selecting all the data in the table:"
msgstr ""

#: ..\..\postgres\adding_data.rst:40
# b00f2a71787f4c83be57bcebd35b0b38
msgid "result:"
msgstr ""

#: ..\..\postgres\adding_data.rst:50
# fb10cd4f6796451fa29bdeb8e7cddf83
msgid "Now you try:"
msgstr ""

#: ..\..\postgres\adding_data.rst:52
# c32ac77b69a74b4386ed99d69d607dd7
msgid "Use the :kbd:`INSERT` command to add a new street to the :kbd:`streets` table."
msgstr ""

#: ..\..\postgres\adding_data.rst:54
# 465ac0361e0f4b84a88b6da4831ae192
msgid "Write the sql you used here:"
msgstr ""

#: ..\..\postgres\adding_data.rst:70
# bc8a91dc79ff4221a7aec2bf816b64cb
msgid "Sequencing data addition according to constraints"
msgstr ""

#: ..\..\postgres\adding_data.rst:72
# f5cf9f2ae7db48e5af212f42aae8d305
msgid "Try to add a person to the people table with the following details:"
msgstr ""

#: ..\..\postgres\adding_data.rst:81
# 5178ffdb0ee74723b2d92dd4c9713155
msgid "Remember, we defined phone numbers as strings."
msgstr ""

#: ..\..\postgres\adding_data.rst:83
# 116ce1a636234b48a05256befc07539b
msgid "What problems did you encounter?"
msgstr ""

#: ..\..\postgres\adding_data.rst:104
# a3cf99a64e934c92a66b14999d7f8bc8
msgid "You should have an error report if you try to do this without first creating a record for Main Street in the :kbd:`streets` table."
msgstr ""

#: ..\..\postgres\adding_data.rst:107
# 9b5f47e418e045aaa89ae880d2aacefc
msgid "What error did you get?"
msgstr ""

#: ..\..\postgres\adding_data.rst:110
# 37ab2b350fa24d1b828e4b559abf913b
msgid "You can't add the street using its name"
msgstr ""

#: ..\..\postgres\adding_data.rst:111
# e2b89a328ba249d987f7433f4d565ef1
msgid "You can't add a street using a street :kbd:`id` before first creating the street record on the streets table"
msgstr ""

#: ..\..\postgres\adding_data.rst:114
# 31db84a7e5cf40b4ab160b770afb946f
msgid "Remember that our two tables are linked via a Primary/Foreign Key pair. This means that no valid person can be created without there also being a valid corresponding street record."
msgstr ""

#: ..\..\postgres\adding_data.rst:118
# f39d3982238645c989572f34ee79d434
msgid "Here is how we made our friend:"
msgstr ""

#: ..\..\postgres\adding_data.rst:126
# 88e3c2f19f8e423cb0f5ab4ca2e16354
msgid "If you look at the streets table again (using a select statement as before), you'll see that the :kbd:`id` for the :kbd:`Main Street` entry is :kbd:`2`. That's why we could merely enter the number :kbd:`2` above. Even though we're not seeing :kbd:`Main Street` written out fully in the entry above, the database will be able to associate that with the :kbd:`street_id` value of :kbd:`2`."
msgstr ""

#: ..\..\postgres\adding_data.rst:134
# e72b956af16449ca9049111d539be6a2
msgid "Select data"
msgstr ""

#: ..\..\postgres\adding_data.rst:136
# 4938b286b18d46a0903bc9c058d4eb01
msgid "We have already shown you the syntax for selecting records. Lets look at a few more examples:"
msgstr ""

#: ..\..\postgres\adding_data.rst:151
# 6f37c85023124787a9e5f80d53d3d978
msgid "In later sessions we will go into more detail on how to select and filter data."
msgstr ""

#: ..\..\postgres\adding_data.rst:154
# e9fa1b6047b74ae89badefef46a80f6c
msgid "Update data"
msgstr ""

#: ..\..\postgres\adding_data.rst:156
# 955931000c7149cea8e98646fe354360
msgid "What is you want to make a change to some existing data? For example a street name is changed:"
msgstr ""

#: ..\..\postgres\adding_data.rst:163
# 0d489e96fc73415ab4433babac66960e
msgid "Be very careful using such update statements - if more than one record matches your :kbd:`WHERE` clause, they will all be updated!"
msgstr ""

#: ..\..\postgres\adding_data.rst:166
# e95ed6bb32a44d7ea9b091ce496cfbee
msgid "A better solution is to use the primary key of the table to reference the record to be changed:"
msgstr ""

#: ..\..\postgres\adding_data.rst:173
# ab9c3e92898f4cba9781319440f857b9
msgid "It should return :kbd:`UPDATE 1`."
msgstr ""

#: ..\..\postgres\adding_data.rst:175
# 779430782af740e0b91bdc1b8119ea3a
msgid "the :kbd:`WHERE` statement criteria are case sensitive :kbd:`Main Street` <> :kbd:`Main street`"
msgstr ""

#: ..\..\postgres\adding_data.rst:179
# 3e1176f867d34f50912e71a80b2cf0d3
msgid "Delete Data"
msgstr ""

#: ..\..\postgres\adding_data.rst:181
# ee92b6ee6d394a93b107a6454a91c597
msgid "Some times you fall out of friendship with people. Sounds like a job for the :kbd:`DELETE` command!"
msgstr ""

#: ..\..\postgres\adding_data.rst:188
# 01e8a7088e6e455dbb9002e2151200b4
msgid "Let's look at our people table now:"
msgstr ""

#: ..\..\postgres\adding_data.rst:197
# 3d10cfb53a6141d89b07b02f98213dd2
msgid "**Exercise:** Use the skills you learned earlier to add some new friends to your database:"
msgstr ""

#: ..\..\postgres\adding_data.rst:210
#: ..\..\postgres\data_model.rst:483
#: ..\..\postgres\db_intro.rst:425
#: ..\..\postgres\queries.rst:314
#: ..\..\postgres\rules.rst:58
#: ..\..\postgres\views.rst:80
# a2ca1f80822f497e927367be5a2b46ba
# 1098519313b04f7595caf4b00b0f012b
# 5f9926f45d1b41268126512441dc5095
# ac23bf6ca2c6414093327cf12a27b4a5
# 76270a5510b14f70970079c3328be766
# 70149f5364d44342be97a4c639df767e
msgid "|IC|"
msgstr ""

#: ..\..\postgres\adding_data.rst:212
# 47a4120d0dac4f2eac1e7b314474a7d3
msgid "Now you know how to add new data to the existing models you created previously. Remember that if you want to add new kinds of data, you may want to modify and/or create new models to contain that data."
msgstr ""

#: ..\..\postgres\adding_data.rst:217
#: ..\..\postgres\data_model.rst:489
#: ..\..\postgres\db_intro.rst:431
#: ..\..\postgres\queries.rst:320
#: ..\..\postgres\rules.rst:64
#: ..\..\postgres\views.rst:85
# a671643b274645ea870693a4161cdbe6
# 4cff134c8abd470e8732d2e9c426765a
# b8e0f3d886b94c8f941b3f7b0055fbdc
# c64d694aab944b8e9737b5da157957ed
# d3805173f219490d853160518dd15aff
# ea2fe635b9d640cd8637865b2d8cc858
msgid "|WN|"
msgstr ""

#: ..\..\postgres\adding_data.rst:219
# c63c9133f7b84650977c129548cae1ff
msgid "Now that you've added some data, you'll learn how to use queries to access this data in various ways."
msgstr ""

#: ..\..\postgres\data_model.rst:2
# f46dab665ae74351b54a889e1159dc66
msgid "|LS| Implementing the Data Model"
msgstr ""

#: ..\..\postgres\data_model.rst:4
# 775c3f626af84226bfc4243b5fc9b72f
msgid "Now that we've covered all the theory, let's create a new database. This database will be used for our exercises for the lessons that will follow afterwards."
msgstr ""

#: ..\..\postgres\data_model.rst:8
# 3c323fa7482549e0883a7770a87c1922
msgid "**The goal for this lesson:** To install the required software and use it to implement our example database."
msgstr ""

#: ..\..\postgres\data_model.rst:12
# 38c30bc7b76041dcade4305ecbc5c434
msgid "Install PostgreSQL"
msgstr ""

#: ..\..\postgres\data_model.rst:14
#: ..\..\postgres\data_model.rst:51
# 79d317200e614216afc4e1d01f6ee468
# 0b5cabe0b6a24689ab0f4a249acaa58e
msgid "Under Ubuntu:"
msgstr ""

#: ..\..\postgres\data_model.rst:20
# 15e97e7a479e4399a1eb813c188e41d7
msgid "You should get a message like this:"
msgstr ""

#: ..\..\postgres\data_model.rst:39
# 42a7264598824b79816fe3e1a1a13dd1
msgid "Press :kbd:`Y` and :kbd:`Enter` and wait for the download and installation to finish."
msgstr ""

#: ..\..\postgres\data_model.rst:43
# a255dc4947364776aa40b5f0914ee8f7
msgid "Help"
msgstr ""

#: ..\..\postgres\data_model.rst:45
# 0885ee95e8a34251a369a955eb31b549
msgid "PostgreSQL has very good `online <http://www.postgresql.org/docs/9.1/static/index.html>`_ documentation."
msgstr ""

#: ..\..\postgres\data_model.rst:49
# b33799fcf5fc4127b6f79a31e7c164c4
msgid "Create a database user"
msgstr ""

#: ..\..\postgres\data_model.rst:53
# 7d3fbd70906f42beba17d410559a131f
msgid "After the installation is complete, run this command to become the postgres user and then create a new database user:"
msgstr ""

#: ..\..\postgres\data_model.rst:60
# 123a5a79728346138a0e571759f730af
msgid "Type in your normal log in password when prompted (you need to have sudo rights)."
msgstr ""

#: ..\..\postgres\data_model.rst:62
# af3917ab3f7047de8ade8e1695099ab1
msgid "Now, at the postgres user's bash prompt, create the database user. Make sure the user name matches your unix login name: it will make your life much easier, as postgres will automatically authenticate you when you are logged in as that user."
msgstr ""

#: ..\..\postgres\data_model.rst:71
# d32ebaaab77d4e86a13e4b57f9081085
msgid "Enter a password when prompted. I normally use a different password to my usual unix login."
msgstr ""

#: ..\..\postgres\data_model.rst:74
# 6c21b6ba9af44c4ead7abc63a5df3ca9
msgid "What do those options mean?"
msgstr ""

#: ..\..\postgres\data_model.rst:86
# 7fddbfd5db9a42e8b4d534eb4d39361f
msgid "Now you should should leave the postgres user's bash shell environment by typing:"
msgstr ""

#: ..\..\postgres\data_model.rst:94
# dce66f8f19c749e891b58d6be696afa1
msgid "Verify the new account"
msgstr ""

#: ..\..\postgres\data_model.rst:100
# f4c762abf40c40b4af20be3962548df9
msgid "Should return something like this:"
msgstr ""

#: ..\..\postgres\data_model.rst:113
#: ..\..\postgres\data_model.rst:144
# 6462c4c8f3a64976a1d1103cc9dda23d
# df3862856a9d400cadc878ecbf45ada1
msgid "Type :kbd:`q` to exit."
msgstr ""

#: ..\..\postgres\data_model.rst:116
# 17d723b5635b48d58aa372fb76c10c9f
msgid "Create a database"
msgstr ""

#: ..\..\postgres\data_model.rst:118
# 28fefd10782b414d926400490adbf92b
msgid "The :kbd:`createdb` command is used to create a new database. It should be run from the bash shell prompt."
msgstr ""

#: ..\..\postgres\data_model.rst:125
# e0714b187f7648b0897e07135364ce72
msgid "You can verify the existence of your new database by using this command:"
msgstr ""

#: ..\..\postgres\data_model.rst:131
# 852797ffdc9343a9a7f0c7e4be127836
msgid "Which should return something like this:"
msgstr ""

#: ..\..\postgres\data_model.rst:147
# 255f4628e5d9402e9ef5d7fcb13f8cee
msgid "Starting a database shell session"
msgstr ""

#: ..\..\postgres\data_model.rst:149
# 41b2e6ae0ebe4423a776cf45150b638c
msgid "You can connect to your database easily like this:"
msgstr ""

#: ..\..\postgres\data_model.rst:155
# 3f7e7ed22a0c4b18ac93ba7554996685
msgid "To exit out of the psql database shell, type:"
msgstr ""

#: ..\..\postgres\data_model.rst:161
# c1ba470ca61046f0b616913a4fcdd59d
msgid "For help in using the shell, type:"
msgstr ""

#: ..\..\postgres\data_model.rst:167
# cf990109e6fa452382b7008752f5d8cd
msgid "For help in using sql commands, type:"
msgstr ""

#: ..\..\postgres\data_model.rst:173
# 10cf848ac8ee4027b5ee3bb97915b1f8
msgid "To get help on a specific command, type (for example):"
msgstr ""

#: ..\..\postgres\data_model.rst:179
# ea9880d917944daca6a5d5037ba36330
msgid "See also the `Psql cheat sheet <../_static/postgres/psql_cheatsheet.pdf>`_ - available online `here <http://www.postgresonline.com/special_feature.php?sf_name=postgresql83_psql_cheatsheet&outputformat=html>`_."
msgstr ""

#: ..\..\postgres\data_model.rst:184
# 70b80d2a18d847f8936c5e7f8f73d77f
msgid "Make Tables in SQL"
msgstr ""

#: ..\..\postgres\data_model.rst:186
# 8f636584f2984e96b106a0e8a1ed9813
msgid "Let's start making some tables! We will use our ER Diagram as a guide. First, let's create a streets table:"
msgstr ""

#: ..\..\postgres\data_model.rst:193
# ca5494e4e95b4862acd77645533606e5
msgid ":kbd:`serial` and :kbd:`varchar` are **data types**. :kbd:`serial` tells PostgreSQL to start an integer sequence (autonumber) to populate the :kbd:`id` automatically for every new record. :kbd:`varchar(50)` tells PostgreSQL to create a character field of 50 characters in length."
msgstr ""

#: ..\..\postgres\data_model.rst:198
# 450345300bd44084a91299ade44cf6c7
msgid "You will notice that the command ends with a :kbd:`;` - all SQL commands should be terminated this way. When you press enter, psql will report something like this:"
msgstr ""

#: ..\..\postgres\data_model.rst:210
# 2c3cd032caba4d58bb28755b70993097
msgid "That means your table was created successfully, with a primary key :kbd:`streets_pkey` using :kbd:`streets.id`."
msgstr ""

#: ..\..\postgres\data_model.rst:213
# 5df3a6f3fb124d41852cbb95f82dc5dc
msgid "Note: If you hit return without entering a :kbd:`;`, then you will get a prompt like this: :kbd:`address-#`. This is because PG is expecting you to enter more. Enter :kbd:`;` to run your command."
msgstr ""

#: ..\..\postgres\data_model.rst:217
# fbedd4d6e94c49788c263a7e80ef9840
msgid "To view your table schema, you can do this:"
msgstr ""

#: ..\..\postgres\data_model.rst:223
#: ..\..\postgres\data_model.rst:242
# 60ad95ea05ef433a866750f392a22e34
# 55b24ea81c044c439048945d52ce3001
msgid "Which should show something like this:"
msgstr ""

#: ..\..\postgres\data_model.rst:236
# 4564de00e41f4ec2a5b9e0601fd500ad
msgid "To view your table contents, you can do this:"
msgstr ""

#: ..\..\postgres\data_model.rst:250
# ab6ac31d057a40ec8733b50779262877
msgid "As you can see, our table is empty!"
msgstr ""

#: ..\..\postgres\data_model.rst:252
# 5715eb5d404848a1ae1c6f9a30c6650c
msgid "Use the approach shown above to make a table called people: Add fields such as phone number, home address, name, etc. (these aren't all valid names: change them to make them valid)."
msgstr ""

#: ..\..\postgres\data_model.rst:255
# 060c65da554840e6876e95f4cf13eacb
msgid "Write the SQL you create here:"
msgstr ""

#: ..\..\postgres\data_model.rst:296
#: ..\..\postgres\queries.rst:289
# 8f62b35cb9644fe5b5bd3fcb5fbbf9e2
# d4e86a1d5a024bb0a3580de48720124c
msgid "Solution:"
msgstr ""

#: ..\..\postgres\data_model.rst:306
# 9e9e0b6abf0f4874a167a6be2334b251
msgid "The schema for the table (enter :kbd:`\\\\d people`) looks like this:"
msgstr ""

#: ..\..\postgres\data_model.rst:322
# e80af28a032044d29a2daaa65c81a398
msgid "For illustration purposes, we have purposely omitted the fkey constraint."
msgstr ""

#: ..\..\postgres\data_model.rst:326
# 5e5240a4e13e431b9928cbcdf3836b74
msgid "Create Keys in SQL"
msgstr ""

#: ..\..\postgres\data_model.rst:328
# 9d1769fc99d44e1cb0255525aa530623
msgid "The problem with our solution above is that the database doesn't know that people and streets have a logical relationship. To express this relationship, we have to define a foreign key that points to the primary key of the streets table."
msgstr ""

#: ..\..\postgres\data_model.rst:337
# 11246108b29e4fd987299fd55a391a4f
msgid "adding the key after the table has been created"
msgstr ""

#: ..\..\postgres\data_model.rst:338
# f05b9efe231746e696d6c51f2c39055b
msgid "defining the key at time of table creation"
msgstr ""

#: ..\..\postgres\data_model.rst:340
# e1d1e917d2d7418ab0c8c119ac03621a
msgid "Our table has already been created, so let's do it the first way:"
msgstr ""

#: ..\..\postgres\data_model.rst:348
# 2ac5bba6a8a0444cbfe5184974f78e34
msgid "That tells the :kbd:`people` table that its :kbd:`street_id` fields must match a valid street :kbd:`id` from the :kbd:`streets` table."
msgstr ""

#: ..\..\postgres\data_model.rst:351
# 7b3f0ad852f9407399439b3a361d608b
msgid "The more usual way to create a constraint is to do it when you create the table:"
msgstr ""

#: ..\..\postgres\data_model.rst:361
# 0dda3ab1246246e9ac606b1490a46533
msgid "After adding the constraint, our table schema looks like this now:"
msgstr ""

#: ..\..\postgres\data_model.rst:381
# 81b6d56016c1442d99af342d628d0303
msgid "Create Indexes in SQL"
msgstr ""

#: ..\..\postgres\data_model.rst:383
# b35ffb4841734bc8ad5b9092b057a978
msgid "We want lightning fast searches on peoples names. To provide for this, we can create an index on the name column of our people table:"
msgstr ""

#: ..\..\postgres\data_model.rst:409
# 4510c699db4c4a14932eff3aba3fc49f
msgid "Dropping Tables in SQL"
msgstr ""

#: ..\..\postgres\data_model.rst:411
# 929f14d8626a412cafa9d06941e469a4
msgid "If you want to get rid of a table you can use the :kbd:`drop` command:"
msgstr ""

#: ..\..\postgres\data_model.rst:418
# b9ab82e007354a9f878780e932d17e36
msgid "In our example, this would not work - why?"
msgstr ""

#: ..\..\postgres\data_model.rst:420
# 427dee766f2f4d089ee07a5a7a5c487f
msgid "Some deep and inspired thoughts as to why..."
msgstr ""

#: ..\..\postgres\data_model.rst:436
# f024c9291ea64e2aa66413ed3b841377
msgid "Sometimes you just can't stand having a table any more. Maybe you are sick of all your friends. How can you get rid of them all in one easy step? Drop the table of course! Of course, right now too much hard work has gone into our table to get rid of it on a whim, but if you really hate your friends that much, nothing's stopping you from ridding yourself of them forever:"
msgstr ""

#: ..\..\postgres\data_model.rst:446
# fcc51a5da66e4adba2173605a38daa64
msgid "This time it works fine! Why? Are people less important than streets?"
msgstr ""

#: ..\..\postgres\data_model.rst:448
# 8c57a5b46bb343cda3e7513b1a8eec5e
msgid "Some thoughts on why you could drop people:"
msgstr ""

#: ..\..\postgres\data_model.rst:464
# c0c4a8a1c1464c92a0a10dac90c95754
msgid "If you actually did enter that command and dropped the :kbd:`people` table, now would be a good time to rebuild it, as you will need it in the next exercises."
msgstr ""

#: ..\..\postgres\data_model.rst:469
# c3c965fbb7af4c378eca376cde4f0a0b
msgid "A word on PG Admin III"
msgstr ""

#: ..\..\postgres\data_model.rst:471
# 344e419557c648eba14273b6d10b5d47
msgid "We are showing you the SQL commands from the psql prompt because it's a very useful way to learn about databases. However, there are quicker and easier ways to do a lot of what we are showing you. Install PGAdminIII and you can create, drop, alter etc tables using 'point and click' operations in a GUI."
msgstr ""

#: ..\..\postgres\data_model.rst:476
# a16da56044e84523b301c770e9661a3d
msgid "Under Ubuntu, you can install it like this:"
msgstr ""

#: ..\..\postgres\data_model.rst:485
# 34cf62c9d3c9484083f11774f72727c4
msgid "You have now seen how to create a brand new database, starting completely from scratch."
msgstr ""

#: ..\..\postgres\data_model.rst:491
# 456460097f7f4296b4db23d910e1a3f4
msgid "Next you'll learn how to use the DBMS to add new data."
msgstr ""

#: ..\..\postgres\db_intro.rst:2
# f8a55b4b518a48dcbd7e8b7b65bc6a06
msgid "|LS| Introduction to Databases"
msgstr ""

#: ..\..\postgres\db_intro.rst:4
# 15bb2e8e6e4b412ca8cfc2857c363644
msgid "Before using PostgreSQL, let's make sure of our ground by covering general database theory. You will not need to enter any of the example code; it's only there for illustration purposes."
msgstr ""

#: ..\..\postgres\db_intro.rst:8
# 201c5013096e4c91a7b33029e605afb2
msgid "**The goal for this lesson:** To understand fundamental database concepts."
msgstr ""

#: ..\..\postgres\db_intro.rst:11
# e7002612931045bebd7e13c7f4618b1a
msgid "What is a Database?"
msgstr ""

#: ..\..\postgres\db_intro.rst:13
# 4abb78daa1014369bb39f35811370787
msgid "A database consists of an organized collection of data for one or more uses, typically in digital form. *- Wikipedia*"
msgstr ""

#: ..\..\postgres\db_intro.rst:18
# 1ae4d648cbe14cadaab12b5ccca02b1d
msgid "A database management system (DBMS) consists of software that operates databases, providing storage, access, security, backup and other facilities. *- Wikipedia*"
msgstr ""

#: ..\..\postgres\db_intro.rst:23
# 792cd65a76d74b2cb637b98d13815ad5
msgid "Tables"
msgstr ""

#: ..\..\postgres\db_intro.rst:25
# d97f341731644763b62dca622560630d
msgid "In relational databases and flat file databases, a table is a set of data elements (values) that is organized using a model of vertical columns (which are identified by their name) and horizontal rows. A table has a specified number of columns, but can have any number of rows. Each row is identified by the values appearing in a particular column subset which has been identified as a candidate key. *- Wikipedia*"
msgstr ""

#: ..\..\postgres\db_intro.rst:40
# b8b064a085c24a168ec6283a2fdc98e8
msgid "In SQL databases a table is also known as a **relation.**"
msgstr ""

#: ..\..\postgres\db_intro.rst:43
# c0c194c361564a1e91b9296d9553f5f5
msgid "Columns / Fields"
msgstr ""

#: ..\..\postgres\db_intro.rst:45
# 1a9419eb4e50446b8f55e9dbcaf7470b
msgid "A column is a set of data values of a particular simple type, one for each row of the table. The columns provide the structure according to which the rows are composed. The term field is often used interchangeably with column, although many consider it more correct to use field (or field value) to refer specifically to the single item that exists at the intersection between one row and one column. *- Wikipedia*"
msgstr ""

#: ..\..\postgres\db_intro.rst:52
# 222fd3dfe22e4147a0a78d559b5b06ac
msgid "A column:"
msgstr ""

#: ..\..\postgres\db_intro.rst:61
# c0e1fc4b40f247168964bb158dc426e2
msgid "A field:"
msgstr ""

#: ..\..\postgres\db_intro.rst:68
# 8db0a84e2bee4853938b4df41dd17ce3
msgid "Records"
msgstr ""

#: ..\..\postgres\db_intro.rst:70
# d33d4429fbc2499db8b838a064ac821d
msgid "A record is the information stored in a table row. Each record will have a field for each of the columns in the table."
msgstr ""

#: ..\..\postgres\db_intro.rst:78
# b40fc305b70a4d2a86b0a0edcdc1a5ec
msgid "Datatypes"
msgstr ""

#: ..\..\postgres\db_intro.rst:80
# e1eb259cb7914b66a935e4263e3e653c
msgid "Datatypes restrict the kind of information that can be stored in a column. *- Tim and Horst*"
msgstr ""

#: ..\..\postgres\db_intro.rst:83
# 60a4c7e3c01f4d3b8502a67e50991c1e
msgid "There are many kinds of datatypes. Let's focus on the most common:"
msgstr ""

#: ..\..\postgres\db_intro.rst:85
# 9865004cd85441d181e6daa96b5eab49
msgid "String - to store free-form text data"
msgstr ""

#: ..\..\postgres\db_intro.rst:86
# b7e63ac386644bdc9e37f7c5bfcae02d
msgid "Integer - to store whole numbers"
msgstr ""

#: ..\..\postgres\db_intro.rst:87
# 6e8fbd24d0404cb18c210f596b444eb8
msgid "Real - to store decimal numbers"
msgstr ""

#: ..\..\postgres\db_intro.rst:88
# 06291b8d40b141e993665c8a096ed249
msgid "Date - to store Horst's birthday so no one forgets"
msgstr ""

#: ..\..\postgres\db_intro.rst:89
# 75fe02644efc4cdab95574e6f6a15598
msgid "Boolean - to store simple true/false values"
msgstr ""

#: ..\..\postgres\db_intro.rst:91
# 08402d12adbb44e88c3146aa00c384ee
msgid "You can tell the database to allow you to also store nothing in a field. If there is nothing in a field, then the field content is referred to as a **'null' value**."
msgstr ""

#: ..\..\postgres\db_intro.rst:111
# ecb2df51b70c4f9b81d41501a38ad755
msgid "There are many more datatypes you can use - `check the PostgreSQL manual! <http://www.postgresql.org/docs/current/static/datatype.html>`_"
msgstr ""

#: ..\..\postgres\db_intro.rst:115
# f8b2d12ece534d06974b30e64e567246
msgid "Modelling an Address Database"
msgstr ""

#: ..\..\postgres\db_intro.rst:117
# 04aef57fd9664d75a59f6887e0c36ab1
msgid "Let's use a simple case study to see how a database is constructed. We want to create an address database. What kind of information should we store?"
msgstr ""

#: ..\..\postgres\db_intro.rst:120
# d41485a65d944a2b820faf1d4fa10342
msgid "Write some address properties in the space provided:"
msgstr ""

#: ..\..\postgres\db_intro.rst:155
# 23720b92dd1640bda44d63195422af86
msgid "The properties that describe an address are the columns. The type of information stored in each column is its datatype. In the next section we will analyse our conceptual address table to see how we can make it better!"
msgstr ""

#: ..\..\postgres\db_intro.rst:160
# 45284641eb1c42caa8e996e1feb59a60
msgid "Database Theory"
msgstr ""

#: ..\..\postgres\db_intro.rst:162
# f23ee3108e3d4ac8ac04d1d761932dc5
msgid "The process of creating a database involves creating a model of the real world; taking real world concepts and representing them in the database as entities."
msgstr ""

#: ..\..\postgres\db_intro.rst:166
# d01954e9401e4f499d435db39511a32a
msgid "Normalisation"
msgstr ""

#: ..\..\postgres\db_intro.rst:168
# 0f130fce72944222bf24b768e05aabe8
msgid "One of the main ideas in a database is to avoid data duplication / redundancy. The process of removing redundancy from a database is called Normalisation."
msgstr ""

#: ..\..\postgres\db_intro.rst:171
# 1643f83c5b134762abcd07db570655d5
msgid "Normalization is a systematic way of ensuring that a database structure is suitable for general-purpose querying and free of certain undesirable characteristics - insertion, update, and deletion anomalies - that could lead to a loss of data integrity. *- Wikipedia*"
msgstr ""

#: ..\..\postgres\db_intro.rst:176
# f6d021eedc054ef1aad3b75a4b9b3a17
msgid "There are different kinds of normalisation 'forms'."
msgstr ""

#: ..\..\postgres\db_intro.rst:178
# 57b7f830b3354b20b500c1a20929d4d7
msgid "Let's take a look at a simple example:"
msgstr ""

#: ..\..\postgres\db_intro.rst:203
# b63b62a9a4cf4957a986b2a4f88908da
msgid "Imagine you have many friends with the same street name or city. Every time this data is duplicated, it consumes space. Worse still, if a city name changes,  you have to do a lot of work to update your database."
msgstr ""

#: ..\..\postgres\db_intro.rst:207
# dd60736fc25d4e638c4951eede4a5cad
msgid "Try to redesign our people table to reduce duplication:"
msgstr ""

#: ..\..\postgres\db_intro.rst:237
# 3ed776c0218047b4820044974671e5f7
msgid "You can read more about database normalisation `here <http://en.wikipedia.org/wiki/Database_normalization>`_"
msgstr ""

#: ..\..\postgres\db_intro.rst:241
# 0eb1ea5e07fd4623ac4f7715749d0d63
msgid "Indexes"
msgstr ""

#: ..\..\postgres\db_intro.rst:243
# e64a0e56cdbe487d86563f50cb4b9960
msgid "A database index is a data structure that improves the speed of data retrieval operations on a database table. *- Wikipedia*"
msgstr ""

#: ..\..\postgres\db_intro.rst:246
# eb2c1e7aba4d47908e9c9f96ef49f559
msgid "Imagine you are reading a textbook and looking for the explanation of a concept - and the textbook has no index! You will have to start reading at one cover and work your way through the entire book until you find the information you need. The index at the back of a book helps you to jump quickly to the page with the relevant information."
msgstr ""

#: ..\..\postgres\db_intro.rst:256
# 35a3f025d1c54fab8a416a189485c2ef
msgid "Now searches on name will be faster:"
msgstr ""

#: ..\..\postgres\db_intro.rst:274
# c4beba02a5d04ce98b49e1e6c7a94326
msgid "Sequences"
msgstr ""

#: ..\..\postgres\db_intro.rst:276
# d2ab228dd1da4b438158d9ea341645f3
msgid "A sequence is a unique number generator. It is normally used to create a unique identifier for a column in a table."
msgstr ""

#: ..\..\postgres\db_intro.rst:279
# 189374fcf76b413fafb60265bd4c1e2c
msgid "In this example, id is a sequence - the number is incremented each time a record is added to the table:"
msgstr ""

#: ..\..\postgres\db_intro.rst:290
# 8ff99d6919234ccb8a15807fd934442a
msgid "Entity Relationship Diagramming"
msgstr ""

#: ..\..\postgres\db_intro.rst:292
# 4f1926f7ec544ac6a2017aa851f0e1b7
msgid "In a normalised database, you typically have many relations (tables). The entity-relationship diagram (ER Diagram) is used to design the logical dependencies between the relations. Remember our un-normalised people table?"
msgstr ""

#: ..\..\postgres\db_intro.rst:305
# cf48eb214acb443aa022c192434e0ffd
msgid "With a little work we can split it into two tables, removing the need to repeat the street name for individuals who live in the same street:"
msgstr ""

#: ..\..\postgres\db_intro.rst:316
# 3885056dbc6f4c7296ab324ce7baf725
msgid "and"
msgstr ""

#: ..\..\postgres\db_intro.rst:326
# 4aa340582d8f4e128a18643eebccb9c2
msgid "We can then link the two tables using the 'keys' :kbd:`streets.id` and :kbd:`people.streets_id`."
msgstr ""

#: ..\..\postgres\db_intro.rst:329
# 3bf54196a29c44338e381f35e0d2e861
msgid "If we draw an ER Diagram for these two tables it would look something like this:"
msgstr ""

#: ..\..\postgres\db_intro.rst:335
# 8df3828598f741ed95b9e171ee90e74d
msgid "The ER Diagram helps us to express 'one to many' relationships. In this case the arrow symbol show that one street can have many people living on it."
msgstr ""

#: ..\..\postgres\db_intro.rst:338
# dad672c3a1f34bfaa6c2a6b07b40422e
msgid "Our people model still has some normalisation issues - try to see if you can normalise it further and show your thoughts by means of an ER Diagram."
msgstr ""

#: ..\..\postgres\db_intro.rst:370
# c0ae5df14ac04d5783e7aac8f6bc4c51
msgid "Constraints, Primary Keys and Foreign Keys"
msgstr ""

#: ..\..\postgres\db_intro.rst:372
# c143eed3cbf04e6a97d62cfccc1c14d0
msgid "A database constraint is used to ensure that data in a relation matches the modeller's view of how that data should be stored. For example a constraint on your postal code could ensure that the number falls between :kbd:`1000` and :kbd:`9999`."
msgstr ""

#: ..\..\postgres\db_intro.rst:377
# 84b0b50b34ee4a308be0dfe9fea954a4
msgid "A Primary key is one or more field values that make a record unique. Usually the primary key is called id and is a sequence."
msgstr ""

#: ..\..\postgres\db_intro.rst:380
# 28b2c72f58144c0782ca08eb6fb62c74
msgid "A Foreign key is used to refer to a unique record on another table (using that other table's primary key)."
msgstr ""

#: ..\..\postgres\db_intro.rst:383
# e4c28f66f5f5411c9917fe64000deb91
msgid "In ER Diagramming, the linkage between tables is normally based on Foreign keys linking to Primary keys."
msgstr ""

#: ..\..\postgres\db_intro.rst:386
# 515b1465783041829284dc4534e95bcc
msgid "If we look at our people example, the table definition shows that the street column is a foreign key that references the primary key on the streets table:"
msgstr ""

#: ..\..\postgres\db_intro.rst:406
# c2474c7729f84ebfa77fac8e887bf4b1
msgid "Transactions"
msgstr ""

#: ..\..\postgres\db_intro.rst:408
# e366c9fbe9b24d48bf5c39a2d6ad6e6d
msgid "When adding, changing, or deleting data in a database, it is always important that the database is left in a good state if something goes wrong. Most databases provide a feature called transaction support. Transactions allow you to create a rollback position that you can return to if your modifications to the database did not run as planned."
msgstr ""

#: ..\..\postgres\db_intro.rst:414
# c0af91273fdd42a085ce403f6b9d9c66
msgid "Take a scenario where you have an accounting system. You need to transfer funds from one account and add them to another. The sequence of steps would go like this:"
msgstr ""

#: ..\..\postgres\db_intro.rst:418
# 39084cd2c8fb4021a20bec52347eb1e9
msgid "remove R20 from Joe"
msgstr ""

#: ..\..\postgres\db_intro.rst:419
# 351514c3b17d405aa92ba180d045b787
msgid "add R20 to Anne"
msgstr ""

#: ..\..\postgres\db_intro.rst:421
# 3270843cdac74cd28141cd5761f15a23
msgid "If something goes wrong during the process (e.g. power failure), the transaction will be rolled back."
msgstr ""

#: ..\..\postgres\db_intro.rst:427
# bf35a3e4f0d940099f19f137b1838d59
msgid "Databases allow you to manage data in a structured way using simple code structures."
msgstr ""

#: ..\..\postgres\db_intro.rst:433
# 7b624462de45401cb58c442f689dbcab
msgid "Now that we've looked at how databases work in theory, let's create a new database to implement the theory we've covered."
msgstr ""

#: ..\..\postgres\index.rst:3
# efdf64188a424478863aa80be0395c83
msgid "|MOD| PostgreSQL"
msgstr ""

#: ..\..\postgres\index.rst:5
# 50541910c6ee4fe686cab7c0d65da787
msgid "PostgreSQL is a Database Management System (DBMS). In this module, you'll be shown how to use PostgreSQL to create a new database, as well as accessing other typical DBMS functions."
msgstr ""

#: ..\..\postgres\queries.rst:2
# 15f975af56024159b65ede9ddb9be508
msgid "|LS| Queries"
msgstr ""

#: ..\..\postgres\queries.rst:4
# 8bbd5b6616a94fea9dd0562a43d2e458
msgid "When you write a :kbd:`SELECT ...` command it is commonly known as a query - you are interrogating the database for information."
msgstr ""

#: ..\..\postgres\queries.rst:7
# 0dec124670ec4fd69b7596a08f0f315a
msgid "**The goal of this lesson:** To learn how to create queries that will return useful information."
msgstr ""

#: ..\..\postgres\queries.rst:11
# 4207495988be49ef9cc6bdc35df2f167
msgid "Follow-up from previous lesson"
msgstr ""

#: ..\..\postgres\queries.rst:13
# 0dacd8baf9ec4eeabf54b9eb4d6ec75d
msgid "Let's check that you added a few people to the database successfully:"
msgstr ""

#: ..\..\postgres\queries.rst:27
# e6d907a1a1a3491eaede2e951ec12483
msgid "Ordering results"
msgstr ""

#: ..\..\postgres\queries.rst:29
# 7ebe1d94195848758beb7a5ca81c4b27
msgid "Let's get a list of people ordered by their house numbers:"
msgstr ""

#: ..\..\postgres\queries.rst:35
#: ..\..\postgres\queries.rst:53
#: ..\..\postgres\queries.rst:187
#: ..\..\postgres\queries.rst:212
#: ..\..\postgres\queries.rst:237
#: ..\..\postgres\queries.rst:254
#: ..\..\postgres\queries.rst:298
#: ..\..\postgres\views.rst:30
# 06d62e9fcc8a40f1972266e1dcf14261
# 6aff9e135ce44657a386081af6f91330
# 6e8311292b3a4068a0106ad075acf206
# 7450ef6d1c894c39ae2943daea8a0439
# 5e6e2311f25b4bbb86fd99b18d2b18d8
# a3a5a17abe5d4e8a875e39a2f463c7f5
# 0dbbb5de30964ab989688c1423fbae80
# e5073a517fbe4d1593437b5e75a89b09
msgid "Result:"
msgstr ""

#: ..\..\postgres\queries.rst:47
# bf904cc8d527454ba879776ab2ffa2ef
msgid "You can sort by more than one column:"
msgstr ""

#: ..\..\postgres\queries.rst:66
# 2aa82a5497084131ae400717918dd196
msgid "Filtering"
msgstr ""

#: ..\..\postgres\queries.rst:68
# 863735c1cfa4406daa8c6938ec659d18
msgid "Often you won't want to see every single record in the database - especially if there are thousands of records and you are only interested in seeing one or two. Never fear, you can filter the results!"
msgstr ""

#: ..\..\postgres\queries.rst:72
# 0847a0b0265c4bb8a0244e3787b8482c
msgid "Here is an example of a numerical filter:"
msgstr ""

#: ..\..\postgres\queries.rst:83
# e8c9011e49844fe79571dd3fb155b266
msgid "You can combine filters (defined using the :kbd:`WHERE` clause) with sorting (defined using the :kbd:`ORDER BY`)"
msgstr ""

#: ..\..\postgres\queries.rst:96
# 86c3502890af4117b82f0ca425bd1a90
msgid "You can also filter based on text data:"
msgstr ""

#: ..\..\postgres\queries.rst:107
# fdd75a7870ad4de093de68f74689acb9
msgid "Here we used the :kbd:`LIKE` clause to find all names with an :kbd:`i` in them. If you want to search for a string of letters regardless of case, you can do a case insensitive search using the :kbd:`ILIKE` clause:"
msgstr ""

#: ..\..\postgres\queries.rst:120
# fd79fecfb864477fbe0b21e8644e7bc0
msgid "That found everyone with a :kbd:`k` or :kbd:`K` in their name. Using the normal :kbd:`ILIKE` clause, you'd get:"
msgstr ""

#: ..\..\postgres\queries.rst:132
# 2b3f3c984d7d4682bc391d765da0f2a7
msgid "Joins"
msgstr ""

#: ..\..\postgres\queries.rst:134
# 7cc1bb04c8f64cd1999d49c8dcbcba38
msgid "What if you want to see the person's details and their street name (not its id)? In order to do that, you need to join the two tables together in a single query. Lets look at an example:"
msgstr ""

#: ..\..\postgres\queries.rst:144
# 5e911cc9f95742e8a0f2503493398322
msgid "With joins, you will always state the two tables the information is coming from, in this case people and streets.  You also need to specify which two keys must match (foreign key & primary key). If you don't specify that, you will get a list of all possible combinations of people and streets, but no way to know who actually lives on which street!"
msgstr ""

#: ..\..\postgres\queries.rst:150
# 64278fce53aa4b5eae9607bd54439ed2
msgid "Here is what the correct output will look like:"
msgstr ""

#: ..\..\postgres\queries.rst:162
# 63252b516ee143099e0cedc2c329a5ac
msgid "We will revisit joins as we create more complex queries later. Just remember they provide a simple way to combine the information from two or more tables."
msgstr ""

#: ..\..\postgres\queries.rst:166
# 27d89421d5d24d1094216091d763e4f0
msgid "Subselect"
msgstr ""

#: ..\..\postgres\queries.rst:168
# 7bdee55bf57f42bebdde20a1782e8537
msgid "First, let's do a little tweaking to our data:"
msgstr ""

#: ..\..\postgres\queries.rst:178
# c52d87b78b3347588ab64862d33ac514
msgid "Let's take a quick look at our data after those changes - we reuse our query from the previous section:"
msgstr ""

#: ..\..\postgres\queries.rst:199
# cfc6a5b45c06447785d634ee2543b467
msgid "Now let's show you a subselection on this data. We want to show only people who live in :kbd:`street_id` number :kbd:`1`."
msgstr ""

#: ..\..\postgres\queries.rst:222
# 255c7a94b1f64501a121cd217ae018b2
msgid "This is a contrived example and in the above situations it may have been overkill. However when you have to filter based on a selection, subselects are really useful!"
msgstr ""

#: ..\..\postgres\queries.rst:227
# 2de7420fb07d4c83b6d5949ab30bff93
msgid "Aggregate Queries"
msgstr ""

#: ..\..\postgres\queries.rst:229
# 2743c0f964a34811a271cd8db3339a37
msgid "One of the powerful features of a database is its ability to summarise the data in its tables. These summaries are called aggregate queries. Here is a typical example:"
msgstr ""

#: ..\..\postgres\queries.rst:246
# dcbb88e95040417d868ba59751ebcafe
msgid "If we want the counts summarised by street name we can do this:"
msgstr ""

#: ..\..\postgres\queries.rst:265
# 77588bdba5fe446cbabd17530031b524
msgid "Because there is no :kbd:`ORDER BY` clause, on your computer these data may not be in the same order as shown here."
msgstr ""

#: ..\..\postgres\queries.rst:268
# 8ba88e2ffa62434496a9be7dda3fa52e
msgid "Exercise:"
msgstr ""

#: ..\..\postgres\queries.rst:270
# 999b8339d9e448c6bd9ef04b31b91ad0
msgid "Summarise the people by street name and show the actual street names instead of the street_id's"
msgstr ""

#: ..\..\postgres\queries.rst:309
# a2c79dc432784e458f597aa05bcd1c74
msgid "You will notice that we have prefixed field names with table names (e.g. people.name and streets.name). This needs to be done whenever the field name is ambiguous."
msgstr ""

#: ..\..\postgres\queries.rst:316
# dc0142b05d0649f7b0796b934e54abe1
msgid "You've seen how to use queries to return the data in your database in a way that allows you to extract useful information from it."
msgstr ""

#: ..\..\postgres\queries.rst:322
# 835147444131494195c8476e47040839
msgid "Next you'll see how to create views from the queries that you've written."
msgstr ""

#: ..\..\postgres\rules.rst:2
# e79498f25ec84e5ca81475e6dc15d150
msgid "|LS| Rules"
msgstr ""

#: ..\..\postgres\rules.rst:4
# 14eb962a984a47b395b71935b42be3f3
msgid "Rules allow the \"query tree\" of an incoming query to be rewritten. One common usage is to implement views, including updatable view. *- Wikipedia*"
msgstr ""

#: ..\..\postgres\rules.rst:7
# cca7cccd6e3a4934896c55c69c219637
msgid "**The goal for this lesson:** To learn how to create new rules for the database."
msgstr ""

#: ..\..\postgres\rules.rst:11
# 06464103a74b4d56a0cc5b5acdb1eb89
msgid "Materialised Views (Rule based views)"
msgstr ""

#: ..\..\postgres\rules.rst:13
# 008b47e3ed3b41d4814ac4b4ae464946
msgid "Say you want to log every change of phone_no in your people table in to a people_log table. So you set up a new table"
msgstr ""

#: ..\..\postgres\rules.rst:20
# 9bb5472812374fbe95c172516263d39e
msgid "In the next step create a rule, that logs every change of a phone_no in the people table into the people_log table:"
msgstr ""

#: ..\..\postgres\rules.rst:29
# 1ed148a2e766476588a717a2c4d856d9
msgid "To test that the rule works, let's modify a phone number:"
msgstr ""

#: ..\..\postgres\rules.rst:35
# 2fc06683824847cc9d8be2a66be59b14
msgid "Check that the table was updated correctly:"
msgstr ""

#: ..\..\postgres\rules.rst:44
# 1ff8c4aaa31a4417b9fb34bfaf6a4173
msgid "Now, thanks to the rule we created, the :kbd:`people_log` table will look like this:"
msgstr ""

#: ..\..\postgres\rules.rst:54
# c381e3c58d364c19a912162869839e23
msgid "The value of the :kbd:`time` field will depend on the current date and time."
msgstr ""

#: ..\..\postgres\rules.rst:60
# 50bfba14a47c4fe7a1d4996a74ffa7fa
msgid "Rules allow you to automatically add or change data in your database to reflect changes in other parts of the database."
msgstr ""

#: ..\..\postgres\rules.rst:66
# 61f56061ccdf414d8d998c4931e7661c
msgid "The next module will introduce you to PostGIS, which takes these database concepts and applies them to GIS data."
msgstr ""

#: ..\..\postgres\views.rst:2
# 597c4828541f4ba89275172011fa4769
msgid "|LS| Views"
msgstr ""

#: ..\..\postgres\views.rst:4
# b695f73ccab543f49cda07e6615741b0
msgid "When you write a query, you need to spend a lot of time and effort formulating it. With views, you can save the definition of a sql query in a reusable 'virtual table'."
msgstr ""

#: ..\..\postgres\views.rst:8
# 279f4de5b44742d8aa878aa0f2ece550
msgid "**The goal for this lesson:** To save a query as a view."
msgstr ""

#: ..\..\postgres\views.rst:11
# 43f41927679f4ed8893a226e3e4c4ec1
msgid "Creating a View"
msgstr ""

#: ..\..\postgres\views.rst:13
# 851ba75be29b427b81023a050f58b3e1
msgid "You can treat a view just like a table, but its data is sourced from a query. Let's make a simple view based on the above."
msgstr ""

#: ..\..\postgres\views.rst:23
# 719dd2b674a941ceaa4264cf8bacc97c
msgid "As you can see the only change is the :kbd:`create view roads_count_v as` part at the beginning. The nice thing is that we can now select data from that view:"
msgstr ""

#: ..\..\postgres\views.rst:42
# 7ad056a2713e4246bbc9cd0dac8fe1ac
msgid "Modifying a View"
msgstr ""

#: ..\..\postgres\views.rst:44
# 50fdcd115f55465b9602a471dbc6100c
msgid "A view is not fixed, and it contains no 'real data'. This means you can easily change it without impacting on any data in your database."
msgstr ""

#: ..\..\postgres\views.rst:55
# b45ab25600d64b53a806aadb842e431c
msgid "(This example also shows the best practice convention of using UPPER CASE for all SQL keywords.)"
msgstr ""

#: ..\..\postgres\views.rst:58
# 4db7e989ae2d4fe0b63a1c3d2790801d
msgid "You will see that we have added an :kbd:`ORDER BY` clause so that our view rows are nicely sorted:"
msgstr ""

#: ..\..\postgres\views.rst:71
# fa10faceee024afe88c10a2147481bc8
msgid "Dropping a View"
msgstr ""

#: ..\..\postgres\views.rst:73
# 0f28c0c95d9f4974923f9b007f537480
msgid "If you no longer need a view, you can delete it like this:"
msgstr ""

#: ..\..\postgres\views.rst:82
# 085082be5a034f1992fd002e4b80fe14
msgid "Using views, you can save a query and access its results as if it were a table."
msgstr ""

#: ..\..\postgres\views.rst:87
# 369fe5267f86428a9158268f7bc6f982
msgid "Sometimes, when changing data, you want your changes to have effects elsewhere in the database. The next lesson will show you how to do this."
msgstr ""

